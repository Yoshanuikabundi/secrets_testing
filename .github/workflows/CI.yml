# https://dev.to/neverendingqs/run-arbitrary-commands-via-a-comment-and-commit-the-changes-58mk
# https://dev.to/petrsvihlik/using-environment-protection-rules-to-secure-secrets-when-building-external-forks-with-pullrequesttarget-hci
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

on:
  issue_comment:
    types: [created]

jobs:
  get_commit:
    if: ${{ github.event.issue.pull_request }} && contains( github.event.comment.body, '/trustcommit' ) && contains(['Yoshanuikabundi'], github.event.comment.user.login)
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ fromJSON(steps.getref.outputs.result).commit_sha }}
      repo: ${{ fromJSON(steps.getref.outputs.result).repo }}
      success: ${{ fromJSON(steps.getref.outputs.result).success }}
    steps:
      - name: Acknowledge command
        uses: actions/github-script@v3
        with:
          script: |
            github.reactions.createForIssueComment({
              comment_id: context.payload.comment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'eyes',
            });
      - id: getref
        name: Get branch name
        uses: actions/github-script@v3
        with:
          result-encoding: json
          script: |
            const pulls_response = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });

            const commit_sha = pulls_response.data.head.sha;

            const commit_response = await github.git.getCommit({
              owner: pulls_response.data.head.repo.owner.login,
              repo: pulls_response.data.head.repo.name,
              commit_sha: commit_sha
            });

            const comment_date = Date.parse(context.payload.comment.created_at);
            const commit_date = Date.parse(commit_response.data.committer.date);
            const push_date = Date.parse(pulls_response.data.head.repo.pushed_at);

            // Commit could be dated before comment but pushed between comment and workflow,
            // so we check that the push was also before the comment
            let out;
            if (commit_date < comment_date && push_date < comment_date) {
              out = {commit_sha: commit_sha, repo: pulls_response.data.head.repo.full_name, success: true};
            } else {
              out = {success: false};
            }

            return out

      - name: Leave a comment if a safe commit couldn't be found
        if: ${{! fromJSON(steps.getref.outputs.result).success }}
        uses: actions/github-script@v3
        with:
          script: |
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number
              body: "Couldn't pick the last commit safely. It might've been pushed or dated after your comment. Please check that you trust the last commit and try again."
            });


  run_ci:
    needs: get_commit
    if: needs.get_commit.outputs.success
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:

      - name: Checkout PR branch
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.get_commit.outputs.commit_sha }}
          repository: ${{ needs.get_commit.outputs.repo }}

      - name: Run CI with secrets
        shell: bash -l {0}
        env:
          REPO_SECRET: ${{ secrets.REPO_SECRET }}
          COMMIT_SHA: ${{ needs.get_commit.outputs.commit_sha  }}
          COMMIT_REPO: ${{ needs.get_commit.outputs.repo }}
        run: |
          echo "Grabbed commit ${COMMIT_SHA} from ${COMMIT_REPO}"
          echo "The secret is '${REPO_SECRET}'"
