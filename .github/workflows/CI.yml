# https://dev.to/neverendingqs/run-arbitrary-commands-via-a-comment-and-commit-the-changes-58mk
# https://dev.to/petrsvihlik/using-environment-protection-rules-to-secure-secrets-when-building-external-forks-with-pullrequesttarget-hci
# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

on:
  issue_comment:
    types: [created]

jobs:
  get_commit:
    if: ${{ github.event.issue.pull_request }} && contains( github.event.comment.body, '/trustcommit' )
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.getref.outputs.result }}
    steps:
      - name: Acknowledge command
        uses: actions/github-script@v3
        with:
          script: |
            github.reactions.createForIssueComment({
              comment_id: context.payload.comment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: 'eyes',
            });
      - id: getref
        name: Get branch name
        uses: actions/github-script@v3
        with:
          result-encoding: json
          script: |
            const pulls_response = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.issue.number
            });

            console.log("pulls_response")
            console.log(pulls_response)

            const commit_sha = pulls_response.data.head.sha;

            const commit_response = await github.git.getCommit({
              owner: pulls_response.data.head.repo.owner.login,
              repo: pulls_response.data.head.repo.name,
              commit_sha: commit_sha
            });

            console.log("commit_response")
            console.log(commit_response)

            const comment_date = Date.parse(context.payload.comment.created_at);
            const commit_date = Date.parse(commit_response.data.committer.date);
            const push_date = Date.parse(pulls_response.data.head.repo.pushed_at);

            // Commit could be dated before comment but pushed between comment and workflow,
            // so we check that the push was also before the comment
            let out;
            if (commit_date < comment_date && push_date < comment_date) {
              out = {commit_sha: commit_sha, repo: pulls_response.data.head.repo.full_name, success: true};
            } else {
              out = {success: false};
            }

            console.log("out")
            console.log(out)

            return out

      - name: Log result
        uses: actions/github-script@v3
        env:
          STEPS: ${{ toJSON(steps) }}
          STEPS_GETREF: ${{ toJSON(steps.getref) }}
          STEPS_GETREF_OUTPUTS: ${{ toJSON(steps.getref.outputs) }}
          STEPS_GETREF_OUTPUTS_RESULT: ${{ toJSON(steps.getref.outputs.result) }}
        with:
          script: |
            console.log("steps")
            console.log(process.env.STEPS)
            console.log("steps.getref")
            console.log(process.env.STEPS_GETREF)
            console.log("steps.getref.outputs")
            console.log(process.env.STEPS_GETREF_OUTPUTS)
            console.log("steps.getref.outputs.result")
            console.log(process.env.STEPS_GETREF_OUTPUTS_RESULT)

      - name: Log result with bash
        shell: bash -l {0}
        env:
          STEPS: ${{ toJSON(steps) }}
          STEPS_GETREF: ${{ toJSON(steps.getref) }}
          STEPS_GETREF_OUTPUTS: ${{ toJSON(steps.getref.outputs) }}
          STEPS_GETREF_OUTPUTS_RESULT: ${{ toJSON(steps.getref.outputs.result) }}
          STEPS_GETREF_OUTPUTS_RESULT_FROMJSON: ${{ toJSON(fromJSON(steps.getref.outputs.result)) }}
        run: |
          echo "toJSON(steps): ${STEPS}"
          echo "toJSON(steps.getref) : ${STEPS_GETREF}"
          echo "toJSON(steps.getref.outputs) : ${STEPS_GETREF_OUTPUTS}"
          echo "toJSON(steps.getref.outputs.result): ${STEPS_GETREF_OUTPUTS_RESULT}"
          echo "toJSON(fromJSON(steps.getref.outputs.result)): ${STEPS_GETREF_OUTPUTS_RESULT_FROMJSON}"


      - name: Leave a comment if a safe commit couldn't be found
        if: steps.getref.outputs.result.success
        uses: actions/github-script@v3
        with:
          script: |
            console.log("steps.getref.outputs.result")
            console.log(steps.getref.outputs.result)

            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number
              body: "Couldn't pick the last commit safely. It might've been pushed or dated after your comment. Please check that you trust the last commit and try again."
            });


  run_ci:
    needs: get_commit
    if: needs.get_commit.outputs.ref
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:

      - name: Checkout PR branch
        uses: actions/checkout@v2
        with:
          ref: ${{ needs.get_commit.outputs.ref.commit_sha }}
          repository: ${{ needs.get_commit.outputs.ref.repo }}

      - name: Run CI with secrets
        shell: bash -l {0}
        env:
          REPO_SECRET: ${{ secrets.REPO_SECRET }}
          COMMIT_SHA: ${{ needs.get_commit.outputs.ref.commit_sha  }}
          COMMIT_REPO: ${{ needs.get_commit.outputs.ref.repo }}
        run: |
          echo "Grabbed commit ${COMMIT_SHA} from ${COMMIT_REPO}"
          echo "The secret is '${REPO_SECRET}'"
